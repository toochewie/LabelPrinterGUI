<!DOCTYPE html>
<html>
<head>
    <title>Text to Image HTA</title>
    <hta:application
        applicationname="Text to Image HTA"
        border="thin"
        borderstyle="normal"
        caption="yes"
        showintaskbar="yes"
        singleinstance="yes"
        sysmenu="yes"
        windowstate="normal">
    <meta http-equiv="x-ua-compatible" content="IE=11"/> <!-- Ensure compatibility with IE 11 -->
    <meta charset="UTF-8"> <!-- Ensure proper character encoding -->
    <style>
        @font-face {
            font-family: "Pearl";
            src: url(FakePearl-Light.woff); /* EOT font file */
        }

        body {
            font-family: "Pearl", Arial, sans-serif; /* Fallback to Arial if the font is not available */
        }
    </style>
    <script type="text/javascript">
		/*var menuItemList = ["焢肉刈包", "瘦肉刈包", "雞排刈包", 
							"泡菜焢肉刈包", "泡菜瘦肉刈包", "麻辣焢肉刈包", "麻辣瘦肉刈包",
							"台灣香腸刈包", "魚排刈包", "脆皮五花肉刈包", "韓式辣醬脆皮五花肉刈包", "燒烤醬脆皮五花肉刈包", 
							"炸軟殼蟹刈包","蒲燒鰻魚刈包", "素肉排刈包", "素五花刈包(蒟蒻)", 
							"台式滷肉飯", "焢肉飯", "瘦肉飯", "滷雞腿飯","滷排骨飯", "滷豆腐飯", 
							"大大雞排飯", "鹽酥雞飯", "排骨飯", "炸鱈魚排飯", 
							"脆皮五花肉飯", "燒烤醬脆皮五花肉飯", "韓式辣醬脆皮五花肉飯",
							"台灣香腸飯", "素肉排飯",  "素五花肉飯(蒟蒻)", "蒲燒鰻魚飯"
						]
						
		var extrasList = ["鹽酥杏鮑菇", "蜂蜜檸檬愛玉", "鷄絲涼麵", "素涼麵", "鹽酥鷄", "鷄排", "炸排骨",
						"梅子地瓜薯條", "芋頭薯條", "炸花枝丸", "炸魚豆腐", 
						"冬瓜檸檬茶", "紅豆沙了牛奶", "綠豆沙了牛奶",
						"三層白肉佐五味醬", "酸梅汁"
						]
		var soupList = ["海帶味噌湯", "貢丸湯", "魚丸湯", "鮮魚味噌湯","紅豆花生仁湯"]
		var menuItemList = ["鷄肉串飯", "紅燒肉飯", "鷄肉串", "紅燒肉"]
		*/
		
		var menuItemList = ["滷豬腳飯"]
		//Items need to be shifted on the x-coordinate to keep it centered. We can calculate this using the 
		//following equation: 203 - (#OfCharacters * fontSize + paddingLeft + paddingRight)/2
		/*function coordinates(){
			for (var i=0; i < menuItemList.length; i++){
				var textwidth = menuItemList[i].length;
				textwidth = textwidth * 35 + 20;
				var coord = 203 - textwidth/2;
				alert(menuItemList[i] + coord);
			}
		}
		*/
		function run(){
			for(var i = 0; i < menuItemList.length; i++){
				saveImage(menuItemList[i]);
			}
		}
		
		function modifyZPLFile(filename, newCoordinates) {
			// Read the ZPL file content
			var fso = new ActiveXObject("Scripting.FileSystemObject");
			var file = fso.OpenTextFile(filename, 1); // 1: For reading
			var zplContent = file.ReadAll();
			file.Close();

			// Replace coordinates in the ZPL content
			for (var i = 0; i < newCoordinates.length; i++) {
				var menuItem = newCoordinates[i].menuItem;
				var xCoord = newCoordinates[i].xCoord;
				var regex = new RegExp("\\^XA\\^FO\\s*\\d+\\s*,\\s*\\d+\\s*", "g");		// Creates regex value.
				zplContent = zplContent.replace(regex, "^FO" + xCoord + ", 60"); 		// Replaces regex. Removes ^XA limiter and creates new coordinates. Assuming 60 for y-coordinate.
				regex = new RegExp("\\^XZ", "g");										// Creates regex value.
				zplContent = zplContent.replace(regex, ""); 							// Removes ^XZ limiter.
			}

			// Overwrite the original ZPL file with the modified content
            var outFile = fso.OpenTextFile(filename, 2); // 2: For writing (overwrite)
            outFile.Write(zplContent);
            outFile.Close();
		}


		
		
        function saveImage(menuItem) {
            var canvas = document.getElementById('myCanvas');
            var ctx = canvas.getContext('2d');

            // Set canvas dimensions
            canvas.width = 10 + menuItem.length * 35 + 10;
            canvas.height = 50;

            // Text attributes
            var text = menuItem; // Chinese characters
            var font = 'Pearl'; // Font family name
            var fontSize = 35;
            var textColor = 'black';
            var bgColor = 'white';

            // Set font
            ctx.font = fontSize + 'px ' + font;

            // Background color
            ctx.fillStyle = bgColor;
            ctx.fillRect(0, 0, canvas.width, canvas.height);

            // Text color
            ctx.fillStyle = textColor;
			
			var textWidth = ctx.measureText(text).width;

            // Calculate text position for left alignment
            var x = (canvas.width - textWidth) / 2; // Left margin
            var y = fontSize; // Top margin

            // Draw the text
            ctx.fillText(text, x, y);

            // Convert canvas to image and save as file
            var imgData = canvas.toDataURL("image/jpeg").replace(/^data:image\/jpeg;base64,/, "");
            saveToFile(imgData, menuItem + ".jpg");

            // Output the text for verification
            document.getElementById('outputText').innerText = text;
			var shell = new ActiveXObject("WScript.Shell")
            shell.run("cmd /c curl --request POST http://api.labelary.com/v1/graphics --form file=@" + menuItem + ".jpg > " + menuItem + ".zpl", 1, true);
			shell.run("delete.bat " + menuItem + ".jpg");
			
			 // Calculate new coordinates
			var textWidth = menuItem.length * 35 + 20;
			var xCoord = 203 - textWidth / 2;

			// Modify ZPL file with new coordinates
			var zplFilename = menuItem + ".zpl"; // Assuming ZPL file has the same name as menuItem
			var newCoordinates = [{ menuItem: menuItem, xCoord: xCoord }];
			modifyZPLFile(zplFilename, newCoordinates);
        }

        function saveToFile(base64Data, filename) {
            var stream = new ActiveXObject("ADODB.Stream");
            stream.Type = 1; // Binary
            stream.Open();
            stream.Write(decodeBase64(base64Data));
            stream.SaveToFile(filename, 2);
            stream.Close();
        }

        function decodeBase64(base64) {
            var xml = new ActiveXObject("MSXML2.DOMDocument");
            var elem = xml.createElement("temp");
            elem.dataType = "bin.base64";
            elem.text = base64;
            return elem.nodeTypedValue;
        }
    </script>
</head>
<body onload="run()">
    <h1>Text to Image HTA</h1>
    <p>Text: <span id="outputText"></span></p> <!-- Display the output text -->
    <canvas id="myCanvas" style="display:none;"></canvas> <!-- Canvas is now part of the HTML -->
</body>
</html>
